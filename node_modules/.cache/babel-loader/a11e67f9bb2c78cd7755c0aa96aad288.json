{"ast":null,"code":"var _jsxFileName = \"/Users/nadiia/Documents/GitHub/goit-react-hw-05-movies/src/components/MoviePage/MoviePage.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearchMovie } from '../../services/Api.jsx';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { ReactComponent as SearchIcon } from '../../icon/search.svg';\nimport { MoviePageCard } from './MoviePageCard';\nimport { Form, FormInput, SearchBtn } from './MoviePageStyled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MoviesPage() {\n  _s();\n\n  const [search, setSearch] = useState('');\n  const [searchSubmit, setSearchSubmit] = useState('');\n  const [searchFilms, setSearchFilms] = useState([]);\n  const [searchParam, setSearchParam] = useSearchParams();\n  useEffect(() => {\n    if (searchParam.has('query')) {\n      setSearchSubmit(searchParam.get('query'));\n    }\n\n    return () => {\n      setSearchFilms([]);\n    };\n  }, [searchParam]);\n  useEffect(() => {\n    if (searchSubmit === '') {\n      return;\n    }\n\n    const searchFilm = async () => {\n      await fetchSearchMovie(searchSubmit).then(data => {\n        if (data.results.length > 0) {\n          setSearchFilms(data.results);\n          return;\n        }\n\n        throw Error();\n      }).catch(error => {\n        toast.error('Movie not found');\n        console.log(error);\n      });\n    };\n\n    searchFilm();\n  }, [searchSubmit]);\n\n  const handleSearch = event => {\n    setSearch(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchSubmit(search);\n\n    if (search === '') {\n      toast.error('Enter what you want to find please');\n      return;\n    }\n\n    setSearchParam({\n      query: search\n    });\n    setSearch('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Toaster, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        onChange: handleSearch,\n        value: search,\n        placeholder: \"Search movies...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBtn, {\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), searchFilms && /*#__PURE__*/_jsxDEV(MoviePageCard, {\n      searchFilms: searchFilms\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MoviesPage, \"i6FRrW3RYwXVMDO2Xtj2NlhM/Kc=\", false, function () {\n  return [useSearchParams];\n});\n\n_c = MoviesPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesPage\");","map":{"version":3,"sources":["/Users/nadiia/Documents/GitHub/goit-react-hw-05-movies/src/components/MoviePage/MoviePage.jsx"],"names":["useState","useEffect","useSearchParams","fetchSearchMovie","toast","Toaster","ReactComponent","SearchIcon","MoviePageCard","Form","FormInput","SearchBtn","MoviesPage","search","setSearch","searchSubmit","setSearchSubmit","searchFilms","setSearchFilms","searchParam","setSearchParam","has","get","searchFilm","then","data","results","length","Error","catch","error","console","log","handleSearch","event","target","value","handleSubmit","preventDefault","query"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearchMovie } from '../../services/Api.jsx';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { ReactComponent as SearchIcon } from '../../icon/search.svg';\nimport { MoviePageCard } from './MoviePageCard';\nimport { Form, FormInput, SearchBtn } from './MoviePageStyled';\n\nexport default function MoviesPage() {\n  const [search, setSearch] = useState('');\n  const [searchSubmit, setSearchSubmit] = useState('');\n  const [searchFilms, setSearchFilms] = useState([]);\n  const [searchParam, setSearchParam] = useSearchParams();\n\n  useEffect(() => {\n    if (searchParam.has('query')) {\n      setSearchSubmit(searchParam.get('query'));\n    }\n    return () => {\n      setSearchFilms([]);\n    };\n  }, [searchParam]);\n\n  useEffect(() => {\n    if (searchSubmit === '') {\n      return;\n    }\n    const searchFilm = async () => {\n      await fetchSearchMovie(searchSubmit)\n        .then(data => {\n          if (data.results.length > 0) {\n            setSearchFilms(data.results);\n            return;\n          }\n          throw Error();\n        })\n        .catch(error => {\n          toast.error('Movie not found');\n          console.log(error);\n        });\n    };\n    searchFilm();\n  }, [searchSubmit]);\n\n  const handleSearch = event => {\n    setSearch(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchSubmit(search);\n\n    if (search === '') {\n      toast.error('Enter what you want to find please');\n      return;\n    }\n\n    setSearchParam({ query: search });\n    setSearch('');\n  };\n\n  return (\n    <>\n      <Toaster />\n      <Form onSubmit={handleSubmit}>\n        <FormInput\n          onChange={handleSearch}\n          value={search}\n          placeholder=\"Search movies...\"\n        />\n        <SearchBtn type=\"submit\">\n          <SearchIcon />\n        </SearchBtn>\n      </Form>\n      {searchFilms && <MoviePageCard searchFilms={searchFilms} />}\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}