{"ast":null,"code":"import axios from 'axios';\nimport PropTypes from 'prop-types';\nconst BASE_URL = 'https://api.themoviedb.org/';\nconst KEY = 'f7e01896e2d5fbc24092901b8d13f2b9';\naxios.defaults.baseURL = URL;\n\nasync function fetchMovies() {\n  let url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const response = await axios.get(url, config);\n  return response.data;\n}\n\nexport function fetchTrendMovie() {\n  return fetchMovies(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n}\nexport function fetchSearchMovie(query) {\n  return fetchMovies(`${BASE_URL}search/movie?api_key=${KEY}&query=${query}&language=en-US&include_adult=false`);\n}\nexport function fetchMovieDetails(moviesId) {\n  return fetchMovies(`${BASE_URL}movie/${moviesId}?api_key=${KEY}&language=en-US`);\n}\nexport function fetchCast(moviesId) {\n  return fetchMovies(`${BASE_URL}movie/${moviesId}/credits?api_key=${KEY}&language=en-US&`);\n}\nexport function fetchReviews(movieId) {\n  return fetchMovies(`${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&`);\n}\nfetchSearchMovie.propTypes = {\n  search: PropTypes.string.isRequired\n};\nfetchMovieDetails.propTypes = {\n  id: PropTypes.number.isRequired\n};\nfetchReviews.propTypes = {\n  id: PropTypes.number.isRequired\n};\nfetchCast.propTypes = {\n  id: PropTypes.number.isRequired\n};","map":{"version":3,"sources":["/Users/nadiia/Documents/GitHub/goit-react-hw-05-movies/src/services/Api.jsx"],"names":["axios","PropTypes","BASE_URL","KEY","defaults","baseURL","URL","fetchMovies","url","config","response","get","data","fetchTrendMovie","fetchSearchMovie","query","fetchMovieDetails","moviesId","fetchCast","fetchReviews","movieId","propTypes","search","string","isRequired","id","number"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAMC,QAAQ,GAAG,6BAAjB;AACA,MAAMC,GAAG,GAAG,kCAAZ;AAEAH,KAAK,CAACI,QAAN,CAAeC,OAAf,GAAyBC,GAAzB;;AAEA,eAAeC,WAAf,GAAkD;AAAA,MAAvBC,GAAuB,uEAAjB,EAAiB;AAAA,MAAbC,MAAa,uEAAJ,EAAI;AAChD,QAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAUH,GAAV,EAAeC,MAAf,CAAvB;AACA,SAAOC,QAAQ,CAACE,IAAhB;AACD;;AAED,OAAO,SAASC,eAAT,GAA2B;AAChC,SAAON,WAAW,CAAE,GAAEL,QAAS,+BAA8BC,GAAI,EAA/C,CAAlB;AACD;AAED,OAAO,SAASW,gBAAT,CAA0BC,KAA1B,EAAiC;AACtC,SAAOR,WAAW,CACf,GAAEL,QAAS,wBAAuBC,GAAI,UAASY,KAAM,qCADtC,CAAlB;AAGD;AAED,OAAO,SAASC,iBAAT,CAA2BC,QAA3B,EAAqC;AAC1C,SAAOV,WAAW,CACf,GAAEL,QAAS,SAAQe,QAAS,YAAWd,GAAI,iBAD5B,CAAlB;AAGD;AACD,OAAO,SAASe,SAAT,CAAmBD,QAAnB,EAA6B;AAClC,SAAOV,WAAW,CACf,GAAEL,QAAS,SAAQe,QAAS,oBAAmBd,GAAI,kBADpC,CAAlB;AAGD;AAED,OAAO,SAASgB,YAAT,CAAsBC,OAAtB,EAA+B;AACpC,SAAOb,WAAW,CACf,GAAEL,QAAS,UAASkB,OAAQ,oBAAmBjB,GAAI,kBADpC,CAAlB;AAGD;AAEDW,gBAAgB,CAACO,SAAjB,GAA6B;AAC3BC,EAAAA,MAAM,EAAErB,SAAS,CAACsB,MAAV,CAAiBC;AADE,CAA7B;AAIAR,iBAAiB,CAACK,SAAlB,GAA8B;AAC5BI,EAAAA,EAAE,EAAExB,SAAS,CAACyB,MAAV,CAAiBF;AADO,CAA9B;AAIAL,YAAY,CAACE,SAAb,GAAyB;AACvBI,EAAAA,EAAE,EAAExB,SAAS,CAACyB,MAAV,CAAiBF;AADE,CAAzB;AAIAN,SAAS,CAACG,SAAV,GAAsB;AACpBI,EAAAA,EAAE,EAAExB,SAAS,CAACyB,MAAV,CAAiBF;AADD,CAAtB","sourcesContent":["import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst BASE_URL = 'https://api.themoviedb.org/';\nconst KEY = 'f7e01896e2d5fbc24092901b8d13f2b9';\n\naxios.defaults.baseURL = URL;\n\nasync function fetchMovies(url = '', config = {}) {\n  const response = await axios.get(url, config);\n  return response.data;\n}\n\nexport function fetchTrendMovie() {\n  return fetchMovies(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n}\n\nexport function fetchSearchMovie(query) {\n  return fetchMovies(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${query}&language=en-US&include_adult=false`\n  );\n}\n\nexport function fetchMovieDetails(moviesId) {\n  return fetchMovies(\n    `${BASE_URL}movie/${moviesId}?api_key=${KEY}&language=en-US`\n  );\n}\nexport function fetchCast(moviesId) {\n  return fetchMovies(\n    `${BASE_URL}movie/${moviesId}/credits?api_key=${KEY}&language=en-US&`\n  );\n}\n\nexport function fetchReviews(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&`\n  );\n}\n\nfetchSearchMovie.propTypes = {\n  search: PropTypes.string.isRequired,\n};\n\nfetchMovieDetails.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\nfetchReviews.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\nfetchCast.propTypes = {\n  id: PropTypes.number.isRequired,\n};"]},"metadata":{},"sourceType":"module"}