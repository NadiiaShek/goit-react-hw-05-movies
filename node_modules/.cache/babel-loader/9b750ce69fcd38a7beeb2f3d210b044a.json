{"ast":null,"code":"var _jsxFileName = \"/Users/nadiia/Documents/GitHub/goit-react-hw-05-movies/src/components/MovieDetails/MovieDetailsPage.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { fetchMovieDetails } from '../../services/Api.jsx';\nimport noPhoto from '../../images/noPhoto.png';\nimport { LinkReturn, Paragraph, LinkCast, LinkRewiews, FilmInfoContainer, Section, GenresItem, GenresList, FilmMore } from './MovieDetailsStyled';\nimport { Loader } from '../Loader/Loader';\nimport { MainMovieTitle, Img, Title, SecondaryMovieTitle } from '../../styles/style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MovieDetailsPage() {\n  _s();\n\n  var _location$state$from, _location$state;\n\n  const [movies, setMovies] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  let {\n    moviesId\n  } = useParams();\n  const location = useLocation();\n  const locationFrom = (_location$state$from = location === null || location === void 0 ? void 0 : (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.from) !== null && _location$state$from !== void 0 ? _location$state$from : '/';\n  useEffect(() => {\n    const oneMovie = async () => {\n      setLoading(true);\n\n      try {\n        await fetchMovieDetails(moviesId).then(data => {\n          setMovies(data);\n        });\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    oneMovie();\n  }, [moviesId]);\n  const releaseData = new Date(movies.release_date);\n  const {\n    release_date,\n    title,\n    vote_average,\n    overview,\n    genres,\n    poster_path\n  } = movies;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(LinkReturn, {\n      to: locationFrom,\n      children: \" \\u25C0 BACK \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(Title, {\n      children: \"Oops...there is nothing, try again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), !error && /*#__PURE__*/_jsxDEV(Section, {\n      children: [poster_path ? /*#__PURE__*/_jsxDEV(Img, {\n        src: `https://image.tmdb.org/t/p/w300${poster_path}`,\n        alt: \"\",\n        \"min-width\": '100px'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Img, {\n        src: noPhoto,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FilmInfoContainer, {\n        children: [/*#__PURE__*/_jsxDEV(MainMovieTitle, {\n          children: [title, \" (\", releaseData.getFullYear(release_date), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SecondaryMovieTitle, {\n          children: [\"User score: \", vote_average * 10, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SecondaryMovieTitle, {\n          children: \"Genres:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(GenresList, {\n          children: genres && genres.map(_ref => {\n            let {\n              name\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(GenresItem, {\n              children: [\"\\uD83C\\uDFA5 \", name, \" |\"]\n            }, name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SecondaryMovieTitle, {\n          children: \"Overview \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), overview ? /*#__PURE__*/_jsxDEV(Paragraph, {\n          children: overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Paragraph, {\n          children: \"No overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), !error && /*#__PURE__*/_jsxDEV(Section, {\n      children: [/*#__PURE__*/_jsxDEV(LinkCast, {\n        to: `/movies/${moviesId}/cast`,\n        state: {\n          from: locationFrom\n        },\n        children: \"Cast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(LinkRewiews, {\n        to: `/movies/${moviesId}/reviews`,\n        state: {\n          from: locationFrom\n        },\n        children: \"Reviews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FilmMore, {\n      children: /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MovieDetailsPage, \"Wn/XguRn+6hWKOI/kxekD/WC1jo=\", false, function () {\n  return [useParams, useLocation];\n});\n\n_c = MovieDetailsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetailsPage\");","map":{"version":3,"sources":["/Users/nadiia/Documents/GitHub/goit-react-hw-05-movies/src/components/MovieDetails/MovieDetailsPage.jsx"],"names":["useState","useEffect","useParams","Outlet","useLocation","fetchMovieDetails","noPhoto","LinkReturn","Paragraph","LinkCast","LinkRewiews","FilmInfoContainer","Section","GenresItem","GenresList","FilmMore","Loader","MainMovieTitle","Img","Title","SecondaryMovieTitle","MovieDetailsPage","movies","setMovies","loading","setLoading","error","setError","moviesId","location","locationFrom","state","from","oneMovie","then","data","releaseData","Date","release_date","title","vote_average","overview","genres","poster_path","getFullYear","map","name"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { fetchMovieDetails } from '../../services/Api.jsx';\nimport noPhoto from '../../images/noPhoto.png';\nimport {\n  LinkReturn,\n  Paragraph,\n  LinkCast,\n  LinkRewiews,\n  FilmInfoContainer,\n  Section,\n  GenresItem,\n  GenresList,\n  FilmMore,\n} from './MovieDetailsStyled';\nimport { Loader } from '../Loader/Loader';\nimport {\n  MainMovieTitle,\n  Img,\n  Title,\n  SecondaryMovieTitle,\n} from '../../styles/style';\n\nexport default function MovieDetailsPage() {\n  const [movies, setMovies] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  let { moviesId } = useParams();\n\n  const location = useLocation();\n  const locationFrom = location?.state?.from ?? '/';\n\n  useEffect(() => {\n    const oneMovie = async () => {\n      setLoading(true);\n      try {\n        await fetchMovieDetails(moviesId).then(data => {\n          setMovies(data);\n        });\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    oneMovie();\n  }, [moviesId]);\n\n  const releaseData = new Date(movies.release_date);\n  const { release_date, title, vote_average, overview, genres, poster_path } =\n    movies;\n\n  return (\n    <>\n      <LinkReturn to={locationFrom}> ◀ BACK </LinkReturn>\n      {loading && <Loader />}\n      {error && <Title>Oops...there is nothing, try again</Title>}\n      {!error && (\n        <Section>\n          {poster_path ? (\n            <Img\n              src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n              alt=\"\"\n              min-width={'100px'}\n            />\n          ) : (\n            <Img src={noPhoto} alt=\"\" />\n          )}\n\n          <FilmInfoContainer>\n            <MainMovieTitle>\n              {title} ({releaseData.getFullYear(release_date)})\n            </MainMovieTitle>\n            <SecondaryMovieTitle>\n              User score: {vote_average * 10}%\n            </SecondaryMovieTitle>\n            <SecondaryMovieTitle>Genres:</SecondaryMovieTitle>\n            <GenresList>\n              {genres &&\n                genres.map(({ name }) => (\n                  <GenresItem key={name}>🎥 {name} |</GenresItem>\n                ))}\n            </GenresList>\n            <SecondaryMovieTitle>Overview </SecondaryMovieTitle>\n            {overview ? (\n              <Paragraph>{overview}</Paragraph>\n            ) : (\n              <Paragraph>No overview</Paragraph>\n            )}\n          </FilmInfoContainer>\n        </Section>\n      )}\n      {!error && (\n        <Section>\n          <LinkCast\n            to={`/movies/${moviesId}/cast`}\n            state={{ from: locationFrom }}\n          >\n            Cast\n          </LinkCast>\n          <LinkRewiews\n            to={`/movies/${moviesId}/reviews`}\n            state={{ from: locationFrom }}\n          >\n            Reviews\n          </LinkRewiews>\n        </Section>\n      )}\n      <FilmMore>\n        <Outlet />\n      </FilmMore>\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}