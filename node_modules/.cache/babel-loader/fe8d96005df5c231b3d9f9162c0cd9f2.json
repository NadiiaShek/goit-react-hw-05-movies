{"ast":null,"code":"var _jsxFileName = \"/Users/nadiia/Documents/GitHub/goit-react-hw-05-movies/src/components/MoviePage/MoviePageCard.jsx\";\nimport PropTypes from 'prop-types';\nimport { MovieItemCard } from '../MovieItemCard/MovieItemCard';\nimport { MovieList } from '../../styles/style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function MoviePageCard(_ref) {\n  let {\n    searchFilms\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(MovieList, {\n    children: searchFilms.map(_ref2 => {\n      let {\n        id,\n        title,\n        release_date,\n        name,\n        backdrop_path\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(MovieItemCard, {\n        id: id,\n        release_date: release_date,\n        title: title,\n        name: name,\n        backdrop_path: backdrop_path\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = MoviePageCard;\nMoviePageCard.propTypes = {\n  searchFilms: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    name: PropTypes.string,\n    backdrop_path: PropTypes.string\n  }))\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviePageCard\");","map":{"version":3,"sources":["/Users/nadiia/Documents/GitHub/goit-react-hw-05-movies/src/components/MoviePage/MoviePageCard.jsx"],"names":["PropTypes","MovieItemCard","MovieList","MoviePageCard","searchFilms","map","id","title","release_date","name","backdrop_path","propTypes","arrayOf","shape","number","isRequired","string"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,gCAA9B;AACA,SAASC,SAAT,QAA0B,oBAA1B;;AAEA,OAAO,SAASC,aAAT,OAAwC;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC7C,sBACE,QAAC,SAAD;AAAA,cACGA,WAAW,CAACC,GAAZ,CAAgB;AAAA,UAAC;AAAEC,QAAAA,EAAF;AAAMC,QAAAA,KAAN;AAAaC,QAAAA,YAAb;AAA2BC,QAAAA,IAA3B;AAAiCC,QAAAA;AAAjC,OAAD;AAAA,0BACf,QAAC,aAAD;AAEE,QAAA,EAAE,EAAEJ,EAFN;AAGE,QAAA,YAAY,EAAEE,YAHhB;AAIE,QAAA,KAAK,EAAED,KAJT;AAKE,QAAA,IAAI,EAAEE,IALR;AAME,QAAA,aAAa,EAAEC;AANjB,SACOJ,EADP;AAAA;AAAA;AAAA;AAAA,cADe;AAAA,KAAhB;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;KAfeH,a;AAiBhBA,aAAa,CAACQ,SAAd,GAA0B;AACxBP,EAAAA,WAAW,EAAEJ,SAAS,CAACY,OAAV,CACXZ,SAAS,CAACa,KAAV,CAAgB;AACdP,IAAAA,EAAE,EAAEN,SAAS,CAACc,MAAV,CAAiBC,UADP;AAEdR,IAAAA,KAAK,EAAEP,SAAS,CAACgB,MAFH;AAGdP,IAAAA,IAAI,EAAET,SAAS,CAACgB,MAHF;AAIdN,IAAAA,aAAa,EAAEV,SAAS,CAACgB;AAJX,GAAhB,CADW;AADW,CAA1B","sourcesContent":["import PropTypes from 'prop-types';\nimport { MovieItemCard } from '../MovieItemCard/MovieItemCard';\nimport { MovieList } from '../../styles/style';\n\nexport function MoviePageCard({ searchFilms }) {\n  return (\n    <MovieList>\n      {searchFilms.map(({ id, title, release_date, name, backdrop_path }) => (\n        <MovieItemCard\n          key={id}\n          id={id}\n          release_date={release_date}\n          title={title}\n          name={name}\n          backdrop_path={backdrop_path}\n        />\n      ))}\n    </MovieList>\n  );\n}\n\nMoviePageCard.propTypes = {\n  searchFilms: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n      backdrop_path: PropTypes.string,\n    })\n  ),\n};"]},"metadata":{},"sourceType":"module"}